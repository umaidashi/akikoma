datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Timetable {
  id  String @id @default(cuid())
  komas Koma[]
}

model Schedule {
  id  String @id @default(cuid())
  name String
  userId String?
  user User? @relation(fields:[userId], references: [id], onDelete: Cascade)
  uniId String?
  university University? @relation(fields:[uniId], references: [id], onDelete: Cascade)
  scheduleKoma ScheduleKoma[]

  @@index([userId])
  @@index([uniId])
}

model ScheduleKoma {
  id String @id @default(cuid())
  name String
  start Int
  end Int
  scheduleId String
  schedule Schedule @relation(fields: [scheduleId], references: [id],onDelete: Cascade)

  @@index([scheduleId])
}

model University {
  id String @id @default(cuid())
  name String
  faculty String?
  schedule Schedule[]
}

model Koma {
  id  String @id @default(cuid())
  name  String?
  day  String
  time  String
  timeTableId String
  timeTable  Timetable @relation(fields: [timeTableId], references: [id], onDelete: Cascade)

  @@index([timeTableId])
}

// auth
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  schedule      Schedule[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}